version: "3"

# a couple of services for your smarthome, remember to set up your .env file first
services:
  # Overview
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    ports:
      - 9080:3000
    volumes:
      - ${DATADIR}/homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations, see alternative methods
    # environment:
    #   PUID: $PUID
    #   PGID: $PGID
  # heimdall:
  #   image: linuxserver/heimdall
  #   container_name: heimdall
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${DATADIR}/heimdall:/config
  #   ports:
  #     - 9080:80
  #     - 9443:443

  # adblocker
  adguard:
    container_name: adguard
    image: adguard/adguardhome:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "443:443/tcp"
      - "853:853/tcp"
      - "784:784/udp"
      - "3300:3000/tcp"
      - "3380:80/tcp"
    volumes:
       - '${DATADIR}/adguard/workdir:/opt/adguardhome/work'
       - '${DATADIR}/adguard/confdir:/opt/adguardhome/conf'
    cap_add:
      - NET_ADMIN
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"
    labels:
      - homepage.group=Network
      - homepage.name=AdGuard
      - homepage.icon=adguard-home.png
      - homepage.href=http://${IP_PI1}:3380
      - homepage.description=Ad blocker
      - homepage.widget.type=adguard
      - homepage.widget.url=http://${IP_PI1}:3380
      - homepage.widget.username=admin
      - homepage.widget.password=password
      - homepage.widget.fields=["queries", "blocked", "filtered", "latency"] 

  # WIFI hotspot
  # unifi-controller:
  #   image: ghcr.io/linuxserver/unifi-controller:arm32v7-latest
  #   container_name: unifi-controller
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - MEM_LIMIT=512M #optional
  #   volumes:
  #     - ${DATADIR}/unifi-controller:/config
  #   ports:
  #     - 3478:3478/udp
  #     - 10001:10001/udp
  #     - 8080:8080
  #     - 8443:8443
  #     - 1900:1900/udp
  #     - 8843:8843
  #     - 8880:8880
  #     - 6789:6789
  #     - 5514:5514
  #   labels: # better keep this one up to date manually
  #     - "com.centurylinklabs.watchtower.enable=false"
  #   logging:
  #     driver: loki
  #     options:
  #       loki-url: "http://localhost:3100/loki/api/v1/push"
  #       max-size: "200m"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true # deleting old unused images automatically
      # optional for notifications
      #- WATCHTOWER_NOTIFICATIONS=email
      #- WATCHTOWER_NOTIFICATION_EMAIL_FROM=${EMAIL_FROM}
      #- WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL_TO}
      #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
      #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
      #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
      #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASSWORD}
      # alternative for notification via pushover
      #- WATCHTOWER_NOTIFICATIONS=shoutrrr
      #- WATCHTOWER_NOTIFICATION_URL=pushover://shoutrrr:${PO_TOKEN}@${PO_USERKEY}
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"
    labels:
      - homepage.group=Tools
      - homepage.name=WatchTower
      - homepage.icon=watchtower.png
      - homepage.href=http://${IP_PI1}:8080
      - homepage.description=Auto update docker containers
      - homepage.widget.type=watchtower
      - homepage.widget.url=http://${IP_PI1}:8080
      - homepage.widget.key=demotoken
      - homepage.widget.fields=["containers_scanned", "containers_updated", "containers_failed"] 

  loki:
    container_name: loki
    image: grafana/loki:2.3.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ${DATADIR}/loki/config/loki-config.yaml:/etc/loki/loki-config.yaml
      - ${DATADIR}/loki/data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "200m"


  # duplicati:
  #   image: lscr.io/linuxserver/duplicati:2.0.6
  #   container_name: duplicati
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     #- CLI_ARGS= #optional
  #   volumes:
  #     - ${DATADIR}/duplicati/config>:/config
  #     - ${DATADIR}:/source
  #   ports:
  #     - 8200:8200
  #   logging:
  #     driver: loki
  #     options:
  #       loki-url: "http://localhost:3100/loki/api/v1/push"
  #       max-size: "200m"

  mosquitto:
    image: "eclipse-mosquitto:1.6"
    restart: unless-stopped
    volumes:
      - "${DATADIR}/mosquitto/config:/mosquitto/config"
      - "${DATADIR}/mosquitto/data:/mosquitto/data"
      - "${DATADIR}/mosquitto/log:/mosquitto/log"
    ports:
      - 1883:1883
    labels:
      - homepage.group=Tools
      - homepage.name=Mosquitto
      - homepage.description=MQTT broker

  grafana:
    image: "grafana/grafana:latest"
    restart: unless-stopped
    user: "$PUID:$PGID"
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - "${DATADIR}/grafana/data:/var/lib/grafana"
    ports:
      - 3000:3000
    labels:
      - homepage.group=Tools
      - homepage.name=Grafana
      - homepage.icon=grafana.png
      - homepage.href=http://${IP_PI1}:3000
      - homepage.description=Graphs
      - homepage.widget.type=grafana
      - homepage.widget.url=http://${IP_PI1}:3000
      - homepage.widget.username=username
      - homepage.widget.password=password
      - homepage.widget.fields=["dashboards", "datasources", "totalalerts", "alertstriggered"] 
    # uncomment this if you wanta to allow anonymus acces to Grafana for embedding (e.g. in Home Assistant dashboards)
    #environment:
    #  - GF_AUTH_DISABLE_LOGIN_FORM=true
    #  - GF_AUTH_ANONYMOUS_ENABLED=true
    #  - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    #  - GF_SECURITY_ALLOW_EMBEDDING=true

  influxdb:
    image: "influxdb:1.8"
    restart: unless-stopped
    volumes:
      - "${DATADIR}/influxdb/data:/var/lib/influxdb"
    healthcheck:
      test: ["CMD", "curl", "-sI", "http://127.0.0.1:8086/ping"]
      interval: 30s
      timeout: 1s
      retries: 24
    ports:
      - 127.0.0.1:8086:8086
    labels:
      - homepage.group=Tools
      - homepage.name=InfluxDB
      - homepage.icon=influxdb.png
      - homepage.description=Database

  # tasmoadmin:
  #   image: "raymondmm/tasmoadmin"
  #   restart: unless-stopped
  #   volumes:
  #     - "${DATADIR}/tasmoadmin:/data"
  #   ports:
  #     - 3080:80

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt
    depends_on:
      mosquitto:
        condition: service_started
    restart: unless-stopped
    ports:
      - 6080:8080 # if you enabled the web UI
    volumes:
      - ${DATADIR}/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    devices:
      - /dev/ttyACM0:/dev/ttyACM0 # or whichever port your Zigbee stick is connected to
    environment:
      - TZ=${TZ}
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "500m"
    labels:
      - homepage.group=Tools
      - homepage.name=Zigbee2mqtt
      - homepage.description=Zigbee to MQTT
 
  zigbee2mqttAssistant:
    image: carldebilly/zigbee2mqttassistant
    restart: unless-stopped
    depends_on:
      zigbee2mqtt:
        condition: service_started
    environment:
      - Z2MA_SETTINGS__MQTTSERVER=mosquitto
      - TZ=${TZ}
    ports:
      - 8880:80

  homeassistant:
    container_name: homeassistant
    restart: unless-stopped
    image: homeassistant/raspberrypi4-homeassistant
    #devices:
    #  - /dev/ttyUSB0:/dev/ttyUSB0
    #  - /dev/ttyUSB1:/dev/ttyUSB1
    #  - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - ${DATADIR}/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/serial/by-id/:/dev/serial/by-id/
    # alternative needed for auto discovery, bluetooth,...
    #network_mode: host
    #privileged: true
    depends_on:
      influxdb:
        condition: service_healthy
      mosquitto:
        condition: service_started
    ports:
      - 8123:8123
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      # don't automatically update this container as it might break your setup
      - "com.centurylinklabs.watchtower.enable=false"
      - homepage.group=Tools
      - homepage.name=HomeAssistant
      - homepage.href=http://${IP_PI1}:8123
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        max-size: "500m"
